// generated by go run gen.go; DO NOT EDIT

package qr

// Dynamic header code lengths order reverse index.  The order is:
//
//	16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
var revhcorder = [nhcodes]byte{
	3, 17, 15, 13, 11, 9, 7, 5, 4, 6, 8, 10, 12, 14, 16, 18, 0, 1, 2,
}

// De Bruijn sequences for binary alphabet, used to generate byte
// frequencies for DEFLATE Huffman trees at various Code.Scale values.
var deBruijn2 = [4]struct {
	seq    uint16
	length byte
}{
	{0b01, 1 << 1},               // B(2,1)  scale N*8
	{0b0011, 1 << 2},             // B(2,2)  scale 4, 6, 7, >8 except N*8
	{0b00010111, 1 << 3},         // B(2,3)  scale 5
	{0b0000100110101111, 1 << 4}, // B(2,4)  scale 2, 3
}

// log2 returns the base 2 logarithm of a 32-bit integer with one bit set.
func log2(bit uint32) int {
	return int([32]uint8{
		0, 1, 2, 6, 3, 11, 7, 16, 4, 14, 12, 21, 8, 23, 17, 26,
		31, 5, 10, 15, 13, 20, 22, 25, 30, 9, 19, 24, 29, 18, 28, 27,
	}[0b00000100011001010011101011011111*bit>>27])
}

// Flate symbol table for fixed blocks.
var fixedSym = [nsyms]code{
	{bit: 0b00001100, nbit: 8},  //    0  00110000
	{bit: 0b10001100, nbit: 8},  //    1  00110001
	{bit: 0b01001100, nbit: 8},  //    2  00110010
	{bit: 0b11001100, nbit: 8},  //    3  00110011
	{bit: 0b00101100, nbit: 8},  //    4  00110100
	{bit: 0b10101100, nbit: 8},  //    5  00110101
	{bit: 0b01101100, nbit: 8},  //    6  00110110
	{bit: 0b11101100, nbit: 8},  //    7  00110111
	{bit: 0b00011100, nbit: 8},  //    8  00111000
	{bit: 0b10011100, nbit: 8},  //    9  00111001
	{bit: 0b01011100, nbit: 8},  //   10  00111010
	{bit: 0b11011100, nbit: 8},  //   11  00111011
	{bit: 0b00111100, nbit: 8},  //   12  00111100
	{bit: 0b10111100, nbit: 8},  //   13  00111101
	{bit: 0b01111100, nbit: 8},  //   14  00111110
	{bit: 0b11111100, nbit: 8},  //   15  00111111
	{bit: 0b00000010, nbit: 8},  //   16  01000000
	{bit: 0b10000010, nbit: 8},  //   17  01000001
	{bit: 0b01000010, nbit: 8},  //   18  01000010
	{bit: 0b11000010, nbit: 8},  //   19  01000011
	{bit: 0b00100010, nbit: 8},  //   20  01000100
	{bit: 0b10100010, nbit: 8},  //   21  01000101
	{bit: 0b01100010, nbit: 8},  //   22  01000110
	{bit: 0b11100010, nbit: 8},  //   23  01000111
	{bit: 0b00010010, nbit: 8},  //   24  01001000
	{bit: 0b10010010, nbit: 8},  //   25  01001001
	{bit: 0b01010010, nbit: 8},  //   26  01001010
	{bit: 0b11010010, nbit: 8},  //   27  01001011
	{bit: 0b00110010, nbit: 8},  //   28  01001100
	{bit: 0b10110010, nbit: 8},  //   29  01001101
	{bit: 0b01110010, nbit: 8},  //   30  01001110
	{bit: 0b11110010, nbit: 8},  //   31  01001111
	{bit: 0b00001010, nbit: 8},  //   32  01010000
	{bit: 0b10001010, nbit: 8},  //   33  01010001
	{bit: 0b01001010, nbit: 8},  //   34  01010010
	{bit: 0b11001010, nbit: 8},  //   35  01010011
	{bit: 0b00101010, nbit: 8},  //   36  01010100
	{bit: 0b10101010, nbit: 8},  //   37  01010101
	{bit: 0b01101010, nbit: 8},  //   38  01010110
	{bit: 0b11101010, nbit: 8},  //   39  01010111
	{bit: 0b00011010, nbit: 8},  //   40  01011000
	{bit: 0b10011010, nbit: 8},  //   41  01011001
	{bit: 0b01011010, nbit: 8},  //   42  01011010
	{bit: 0b11011010, nbit: 8},  //   43  01011011
	{bit: 0b00111010, nbit: 8},  //   44  01011100
	{bit: 0b10111010, nbit: 8},  //   45  01011101
	{bit: 0b01111010, nbit: 8},  //   46  01011110
	{bit: 0b11111010, nbit: 8},  //   47  01011111
	{bit: 0b00000110, nbit: 8},  //   48  01100000
	{bit: 0b10000110, nbit: 8},  //   49  01100001
	{bit: 0b01000110, nbit: 8},  //   50  01100010
	{bit: 0b11000110, nbit: 8},  //   51  01100011
	{bit: 0b00100110, nbit: 8},  //   52  01100100
	{bit: 0b10100110, nbit: 8},  //   53  01100101
	{bit: 0b01100110, nbit: 8},  //   54  01100110
	{bit: 0b11100110, nbit: 8},  //   55  01100111
	{bit: 0b00010110, nbit: 8},  //   56  01101000
	{bit: 0b10010110, nbit: 8},  //   57  01101001
	{bit: 0b01010110, nbit: 8},  //   58  01101010
	{bit: 0b11010110, nbit: 8},  //   59  01101011
	{bit: 0b00110110, nbit: 8},  //   60  01101100
	{bit: 0b10110110, nbit: 8},  //   61  01101101
	{bit: 0b01110110, nbit: 8},  //   62  01101110
	{bit: 0b11110110, nbit: 8},  //   63  01101111
	{bit: 0b00001110, nbit: 8},  //   64  01110000
	{bit: 0b10001110, nbit: 8},  //   65  01110001
	{bit: 0b01001110, nbit: 8},  //   66  01110010
	{bit: 0b11001110, nbit: 8},  //   67  01110011
	{bit: 0b00101110, nbit: 8},  //   68  01110100
	{bit: 0b10101110, nbit: 8},  //   69  01110101
	{bit: 0b01101110, nbit: 8},  //   70  01110110
	{bit: 0b11101110, nbit: 8},  //   71  01110111
	{bit: 0b00011110, nbit: 8},  //   72  01111000
	{bit: 0b10011110, nbit: 8},  //   73  01111001
	{bit: 0b01011110, nbit: 8},  //   74  01111010
	{bit: 0b11011110, nbit: 8},  //   75  01111011
	{bit: 0b00111110, nbit: 8},  //   76  01111100
	{bit: 0b10111110, nbit: 8},  //   77  01111101
	{bit: 0b01111110, nbit: 8},  //   78  01111110
	{bit: 0b11111110, nbit: 8},  //   79  01111111
	{bit: 0b00000001, nbit: 8},  //   80  10000000
	{bit: 0b10000001, nbit: 8},  //   81  10000001
	{bit: 0b01000001, nbit: 8},  //   82  10000010
	{bit: 0b11000001, nbit: 8},  //   83  10000011
	{bit: 0b00100001, nbit: 8},  //   84  10000100
	{bit: 0b10100001, nbit: 8},  //   85  10000101
	{bit: 0b01100001, nbit: 8},  //   86  10000110
	{bit: 0b11100001, nbit: 8},  //   87  10000111
	{bit: 0b00010001, nbit: 8},  //   88  10001000
	{bit: 0b10010001, nbit: 8},  //   89  10001001
	{bit: 0b01010001, nbit: 8},  //   90  10001010
	{bit: 0b11010001, nbit: 8},  //   91  10001011
	{bit: 0b00110001, nbit: 8},  //   92  10001100
	{bit: 0b10110001, nbit: 8},  //   93  10001101
	{bit: 0b01110001, nbit: 8},  //   94  10001110
	{bit: 0b11110001, nbit: 8},  //   95  10001111
	{bit: 0b00001001, nbit: 8},  //   96  10010000
	{bit: 0b10001001, nbit: 8},  //   97  10010001
	{bit: 0b01001001, nbit: 8},  //   98  10010010
	{bit: 0b11001001, nbit: 8},  //   99  10010011
	{bit: 0b00101001, nbit: 8},  //  100  10010100
	{bit: 0b10101001, nbit: 8},  //  101  10010101
	{bit: 0b01101001, nbit: 8},  //  102  10010110
	{bit: 0b11101001, nbit: 8},  //  103  10010111
	{bit: 0b00011001, nbit: 8},  //  104  10011000
	{bit: 0b10011001, nbit: 8},  //  105  10011001
	{bit: 0b01011001, nbit: 8},  //  106  10011010
	{bit: 0b11011001, nbit: 8},  //  107  10011011
	{bit: 0b00111001, nbit: 8},  //  108  10011100
	{bit: 0b10111001, nbit: 8},  //  109  10011101
	{bit: 0b01111001, nbit: 8},  //  110  10011110
	{bit: 0b11111001, nbit: 8},  //  111  10011111
	{bit: 0b00000101, nbit: 8},  //  112  10100000
	{bit: 0b10000101, nbit: 8},  //  113  10100001
	{bit: 0b01000101, nbit: 8},  //  114  10100010
	{bit: 0b11000101, nbit: 8},  //  115  10100011
	{bit: 0b00100101, nbit: 8},  //  116  10100100
	{bit: 0b10100101, nbit: 8},  //  117  10100101
	{bit: 0b01100101, nbit: 8},  //  118  10100110
	{bit: 0b11100101, nbit: 8},  //  119  10100111
	{bit: 0b00010101, nbit: 8},  //  120  10101000
	{bit: 0b10010101, nbit: 8},  //  121  10101001
	{bit: 0b01010101, nbit: 8},  //  122  10101010
	{bit: 0b11010101, nbit: 8},  //  123  10101011
	{bit: 0b00110101, nbit: 8},  //  124  10101100
	{bit: 0b10110101, nbit: 8},  //  125  10101101
	{bit: 0b01110101, nbit: 8},  //  126  10101110
	{bit: 0b11110101, nbit: 8},  //  127  10101111
	{bit: 0b00001101, nbit: 8},  //  128  10110000
	{bit: 0b10001101, nbit: 8},  //  129  10110001
	{bit: 0b01001101, nbit: 8},  //  130  10110010
	{bit: 0b11001101, nbit: 8},  //  131  10110011
	{bit: 0b00101101, nbit: 8},  //  132  10110100
	{bit: 0b10101101, nbit: 8},  //  133  10110101
	{bit: 0b01101101, nbit: 8},  //  134  10110110
	{bit: 0b11101101, nbit: 8},  //  135  10110111
	{bit: 0b00011101, nbit: 8},  //  136  10111000
	{bit: 0b10011101, nbit: 8},  //  137  10111001
	{bit: 0b01011101, nbit: 8},  //  138  10111010
	{bit: 0b11011101, nbit: 8},  //  139  10111011
	{bit: 0b00111101, nbit: 8},  //  140  10111100
	{bit: 0b10111101, nbit: 8},  //  141  10111101
	{bit: 0b01111101, nbit: 8},  //  142  10111110
	{bit: 0b11111101, nbit: 8},  //  143  10111111
	{bit: 0b000010011, nbit: 9}, //  144  110010000
	{bit: 0b100010011, nbit: 9}, //  145  110010001
	{bit: 0b010010011, nbit: 9}, //  146  110010010
	{bit: 0b110010011, nbit: 9}, //  147  110010011
	{bit: 0b001010011, nbit: 9}, //  148  110010100
	{bit: 0b101010011, nbit: 9}, //  149  110010101
	{bit: 0b011010011, nbit: 9}, //  150  110010110
	{bit: 0b111010011, nbit: 9}, //  151  110010111
	{bit: 0b000110011, nbit: 9}, //  152  110011000
	{bit: 0b100110011, nbit: 9}, //  153  110011001
	{bit: 0b010110011, nbit: 9}, //  154  110011010
	{bit: 0b110110011, nbit: 9}, //  155  110011011
	{bit: 0b001110011, nbit: 9}, //  156  110011100
	{bit: 0b101110011, nbit: 9}, //  157  110011101
	{bit: 0b011110011, nbit: 9}, //  158  110011110
	{bit: 0b111110011, nbit: 9}, //  159  110011111
	{bit: 0b000001011, nbit: 9}, //  160  110100000
	{bit: 0b100001011, nbit: 9}, //  161  110100001
	{bit: 0b010001011, nbit: 9}, //  162  110100010
	{bit: 0b110001011, nbit: 9}, //  163  110100011
	{bit: 0b001001011, nbit: 9}, //  164  110100100
	{bit: 0b101001011, nbit: 9}, //  165  110100101
	{bit: 0b011001011, nbit: 9}, //  166  110100110
	{bit: 0b111001011, nbit: 9}, //  167  110100111
	{bit: 0b000101011, nbit: 9}, //  168  110101000
	{bit: 0b100101011, nbit: 9}, //  169  110101001
	{bit: 0b010101011, nbit: 9}, //  170  110101010
	{bit: 0b110101011, nbit: 9}, //  171  110101011
	{bit: 0b001101011, nbit: 9}, //  172  110101100
	{bit: 0b101101011, nbit: 9}, //  173  110101101
	{bit: 0b011101011, nbit: 9}, //  174  110101110
	{bit: 0b111101011, nbit: 9}, //  175  110101111
	{bit: 0b000011011, nbit: 9}, //  176  110110000
	{bit: 0b100011011, nbit: 9}, //  177  110110001
	{bit: 0b010011011, nbit: 9}, //  178  110110010
	{bit: 0b110011011, nbit: 9}, //  179  110110011
	{bit: 0b001011011, nbit: 9}, //  180  110110100
	{bit: 0b101011011, nbit: 9}, //  181  110110101
	{bit: 0b011011011, nbit: 9}, //  182  110110110
	{bit: 0b111011011, nbit: 9}, //  183  110110111
	{bit: 0b000111011, nbit: 9}, //  184  110111000
	{bit: 0b100111011, nbit: 9}, //  185  110111001
	{bit: 0b010111011, nbit: 9}, //  186  110111010
	{bit: 0b110111011, nbit: 9}, //  187  110111011
	{bit: 0b001111011, nbit: 9}, //  188  110111100
	{bit: 0b101111011, nbit: 9}, //  189  110111101
	{bit: 0b011111011, nbit: 9}, //  190  110111110
	{bit: 0b111111011, nbit: 9}, //  191  110111111
	{bit: 0b000000111, nbit: 9}, //  192  111000000
	{bit: 0b100000111, nbit: 9}, //  193  111000001
	{bit: 0b010000111, nbit: 9}, //  194  111000010
	{bit: 0b110000111, nbit: 9}, //  195  111000011
	{bit: 0b001000111, nbit: 9}, //  196  111000100
	{bit: 0b101000111, nbit: 9}, //  197  111000101
	{bit: 0b011000111, nbit: 9}, //  198  111000110
	{bit: 0b111000111, nbit: 9}, //  199  111000111
	{bit: 0b000100111, nbit: 9}, //  200  111001000
	{bit: 0b100100111, nbit: 9}, //  201  111001001
	{bit: 0b010100111, nbit: 9}, //  202  111001010
	{bit: 0b110100111, nbit: 9}, //  203  111001011
	{bit: 0b001100111, nbit: 9}, //  204  111001100
	{bit: 0b101100111, nbit: 9}, //  205  111001101
	{bit: 0b011100111, nbit: 9}, //  206  111001110
	{bit: 0b111100111, nbit: 9}, //  207  111001111
	{bit: 0b000010111, nbit: 9}, //  208  111010000
	{bit: 0b100010111, nbit: 9}, //  209  111010001
	{bit: 0b010010111, nbit: 9}, //  210  111010010
	{bit: 0b110010111, nbit: 9}, //  211  111010011
	{bit: 0b001010111, nbit: 9}, //  212  111010100
	{bit: 0b101010111, nbit: 9}, //  213  111010101
	{bit: 0b011010111, nbit: 9}, //  214  111010110
	{bit: 0b111010111, nbit: 9}, //  215  111010111
	{bit: 0b000110111, nbit: 9}, //  216  111011000
	{bit: 0b100110111, nbit: 9}, //  217  111011001
	{bit: 0b010110111, nbit: 9}, //  218  111011010
	{bit: 0b110110111, nbit: 9}, //  219  111011011
	{bit: 0b001110111, nbit: 9}, //  220  111011100
	{bit: 0b101110111, nbit: 9}, //  221  111011101
	{bit: 0b011110111, nbit: 9}, //  222  111011110
	{bit: 0b111110111, nbit: 9}, //  223  111011111
	{bit: 0b000001111, nbit: 9}, //  224  111100000
	{bit: 0b100001111, nbit: 9}, //  225  111100001
	{bit: 0b010001111, nbit: 9}, //  226  111100010
	{bit: 0b110001111, nbit: 9}, //  227  111100011
	{bit: 0b001001111, nbit: 9}, //  228  111100100
	{bit: 0b101001111, nbit: 9}, //  229  111100101
	{bit: 0b011001111, nbit: 9}, //  230  111100110
	{bit: 0b111001111, nbit: 9}, //  231  111100111
	{bit: 0b000101111, nbit: 9}, //  232  111101000
	{bit: 0b100101111, nbit: 9}, //  233  111101001
	{bit: 0b010101111, nbit: 9}, //  234  111101010
	{bit: 0b110101111, nbit: 9}, //  235  111101011
	{bit: 0b001101111, nbit: 9}, //  236  111101100
	{bit: 0b101101111, nbit: 9}, //  237  111101101
	{bit: 0b011101111, nbit: 9}, //  238  111101110
	{bit: 0b111101111, nbit: 9}, //  239  111101111
	{bit: 0b000011111, nbit: 9}, //  240  111110000
	{bit: 0b100011111, nbit: 9}, //  241  111110001
	{bit: 0b010011111, nbit: 9}, //  242  111110010
	{bit: 0b110011111, nbit: 9}, //  243  111110011
	{bit: 0b001011111, nbit: 9}, //  244  111110100
	{bit: 0b101011111, nbit: 9}, //  245  111110101
	{bit: 0b011011111, nbit: 9}, //  246  111110110
	{bit: 0b111011111, nbit: 9}, //  247  111110111
	{bit: 0b000111111, nbit: 9}, //  248  111111000
	{bit: 0b100111111, nbit: 9}, //  249  111111001
	{bit: 0b010111111, nbit: 9}, //  250  111111010
	{bit: 0b110111111, nbit: 9}, //  251  111111011
	{bit: 0b001111111, nbit: 9}, //  252  111111100
	{bit: 0b101111111, nbit: 9}, //  253  111111101
	{bit: 0b011111111, nbit: 9}, //  254  111111110
	{bit: 0b111111111, nbit: 9}, //  255  111111111
	{bit: 0b0000000, nbit: 7},   //  256  0000000
	{bit: 0b1000000, nbit: 7},   //  257  0000001
	{bit: 0b0100000, nbit: 7},   //  258  0000010
	{bit: 0b1100000, nbit: 7},   //  259  0000011
	{bit: 0b0010000, nbit: 7},   //  260  0000100
	{bit: 0b1010000, nbit: 7},   //  261  0000101
	{bit: 0b0110000, nbit: 7},   //  262  0000110
	{bit: 0b1110000, nbit: 7},   //  263  0000111
	{bit: 0b0001000, nbit: 7},   //  264  0001000
	{bit: 0b1001000, nbit: 7},   //  265  0001001
	{bit: 0b0101000, nbit: 7},   //  266  0001010
	{bit: 0b1101000, nbit: 7},   //  267  0001011
	{bit: 0b0011000, nbit: 7},   //  268  0001100
	{bit: 0b1011000, nbit: 7},   //  269  0001101
	{bit: 0b0111000, nbit: 7},   //  270  0001110
	{bit: 0b1111000, nbit: 7},   //  271  0001111
	{bit: 0b0000100, nbit: 7},   //  272  0010000
	{bit: 0b1000100, nbit: 7},   //  273  0010001
	{bit: 0b0100100, nbit: 7},   //  274  0010010
	{bit: 0b1100100, nbit: 7},   //  275  0010011
	{bit: 0b0010100, nbit: 7},   //  276  0010100
	{bit: 0b1010100, nbit: 7},   //  277  0010101
	{bit: 0b0110100, nbit: 7},   //  278  0010110
	{bit: 0b1110100, nbit: 7},   //  279  0010111
	{bit: 0b00000011, nbit: 8},  //  280  11000000
	{bit: 0b10000011, nbit: 8},  //  281  11000001
	{bit: 0b01000011, nbit: 8},  //  282  11000010
	{bit: 0b11000011, nbit: 8},  //  283  11000011
	{bit: 0b00100011, nbit: 8},  //  284  11000100
	{bit: 0b10100011, nbit: 8},  //  285  11000101
}

// Flate distance code table for fixed blocks.
var fixedDist = [ndcodes]code{
	//                                Extra
	//                          Code  Bits   Distance
	//                          ----  ----  -----------
	{bit: 0b00000, nbit: 5}, //   0     0        1
	{bit: 0b10000, nbit: 5}, //   1     0        2
	{bit: 0b01000, nbit: 5}, //   2     0        3
	{bit: 0b11000, nbit: 5}, //   3     0        4
	{bit: 0b00100, nbit: 5}, //   4     1       5,6
	{bit: 0b10100, nbit: 5}, //   5     1       7,8
	{bit: 0b01100, nbit: 5}, //   6     2       9-12
	{bit: 0b11100, nbit: 5}, //   7     2      13-16
	{bit: 0b00010, nbit: 5}, //   8     3      17-24
	{bit: 0b10010, nbit: 5}, //   9     3      25-32
	{bit: 0b01010, nbit: 5}, //  10     4      33-48
	{bit: 0b11010, nbit: 5}, //  11     4      49-64
	{bit: 0b00110, nbit: 5}, //  12     5      65-96
	{bit: 0b10110, nbit: 5}, //  13     5      97-128
	{bit: 0b01110, nbit: 5}, //  14     6     129-192
	{bit: 0b11110, nbit: 5}, //  15     6     193-256
	{bit: 0b00001, nbit: 5}, //  16     7     257-384
	{bit: 0b10001, nbit: 5}, //  17     7     385-512
	{bit: 0b01001, nbit: 5}, //  18     8     513-768
	{bit: 0b11001, nbit: 5}, //  19     8     769-1024
	{bit: 0b00101, nbit: 5}, //  20     9    1025-1536
	{bit: 0b10101, nbit: 5}, //  21     9    1537-2048
	{bit: 0b01101, nbit: 5}, //  22    10    2049-3072
	{bit: 0b11101, nbit: 5}, //  23    10    3073-4096
	{bit: 0b00011, nbit: 5}, //  24    11    4097-6144
	{bit: 0b10011, nbit: 5}, //  25    11    6145-8192
	{bit: 0b01011, nbit: 5}, //  26    12    8193-12288
	{bit: 0b11011, nbit: 5}, //  27    12   12289-16384
	{bit: 0b00111, nbit: 5}, //  28    13   16385-24576
	{bit: 0b10111, nbit: 5}, //  29    13   24577-32768
}
